<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Soben&#39;s Secret Base </title>
    <link>https://wangloo.github.io/blog/</link>
    <description>Recent content on Soben&#39;s Secret Base </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>@2019 Notepadium.</copyright>
    <lastBuildDate>Sat, 21 May 2022 17:39:42 +0800</lastBuildDate>
    
        <atom:link href="https://wangloo.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>HuGo Configuration</title>
        <link>https://wangloo.github.io/blog/posts/hugo/</link>
        <pubDate>Sat, 21 May 2022 17:39:42 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/hugo/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/hugo/ -&lt;h1 id=&#34;emoji-support&#34;&gt;Emoji Support&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/41047920/adding-emoji-to-a-hugo-page-variable&#34;&gt;Adding emoji tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.webfx.com/tools/emoji-cheat-sheet/&#34;&gt;Emoji chart&lt;/a&gt;&lt;/p&gt;
- https://wangloo.github.io/blog/posts/hugo/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>2019 Stanford Commencement Timcook</title>
        <link>https://wangloo.github.io/blog/posts/motivation/2019-stanford-commencement-timcook/</link>
        <pubDate>Wed, 18 May 2022 19:32:38 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/motivation/2019-stanford-commencement-timcook/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/motivation/2019-stanford-commencement-timcook/ -&lt;h1 id=&#34;content&#34;&gt;Content&lt;/h1&gt;
&lt;p&gt;Fourteen years ago, Steve stood on this stage and told your predecessors &amp;ldquo;Your time is limited. So don&amp;rsquo;t waste is living someone else&amp;rsquo;s life.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;So what is true then is true now. Don&amp;rsquo;t waste your time living someone else&amp;rsquo;s life. Don&amp;rsquo;t try to emulate the people who came before you to the exclusion of everything else, contorting into a shape that&lt;/p&gt;
- https://wangloo.github.io/blog/posts/motivation/2019-stanford-commencement-timcook/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>Html Css Learning note (0)</title>
        <link>https://wangloo.github.io/blog/posts/html-css-learning/0/</link>
        <pubDate>Tue, 17 May 2022 11:02:04 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/html-css-learning/0/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/html-css-learning/0/ -&lt;h1 id=&#34;get-start&#34;&gt;Get start&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;HTML is resonsible for the content of the page. That&amp;rsquo;s the text, images, buttons, etc.&lt;/li&gt;
&lt;li&gt;CSS is resonsible for the presentation of the content. That&amp;rsquo;s the color, layout, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configure-vim-as-html-code-editor&#34;&gt;Configure VIM as HTML code-editor&lt;/h2&gt;
&lt;p&gt;Add vim plugin:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://emmet.io/&#34;&gt;emmet&lt;/a&gt;: Coding HTML faster.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSS autocomplete key: &lt;code&gt;&amp;lt;C-x&amp;gt; &amp;lt;C-o&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;HTML and CSS live previes plugin: &lt;a href=&#34;https://github.com/turbio/bracey.vim&#34;&gt;bracey&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;urlopen error solution: &lt;a href=&#34;https://github.com/turbio/bracey.vim/issues/21&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;fking-html&#34;&gt;F**king HTML&lt;/h1&gt;
&lt;h2 id=&#34;anatomy-of-an-html-element&#34;&gt;Anatomy of an HTML element&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt; THML is a markup language&lt;span style=&#34;color:#111&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The HTML element is composed of &lt;code&gt;opening tag&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt;, &lt;code&gt;closing tag&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;html-tips&#34;&gt;HTML tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img/&amp;gt;&lt;/code&gt; element should add &lt;code&gt;alt&lt;/code&gt; attritube at all time, for the convenience of the blind.&lt;/li&gt;
&lt;li&gt;An important principle in web design is &lt;code&gt;making the HTML elements meaningful&lt;/code&gt;. That is &lt;a href=&#34;https://www.thoughtco.com/why-use-semantic-html-3468271&#34;&gt;semantic HTML&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;fking-css&#34;&gt;F**king CSS&lt;/h1&gt;
&lt;p&gt;CSS describes the visual style and presentation of the contend in HTML.&lt;/p&gt;
&lt;h2 id=&#34;anatomy-of-an-html-element-1&#34;&gt;Anatomy of an HTML element&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;blue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;text-align&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;center&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;font-size&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;px&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;h1 is &lt;code&gt;Seletor&lt;/code&gt;, every &lt;code&gt;style&lt;/code&gt; has &lt;code&gt;proporty&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conflicts-between-selectors&#34;&gt;Conflicts between selectors&lt;/h2&gt;
&lt;p&gt;CSS style priority from high to low:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Inline style(style attribute in HTML)&lt;/li&gt;
&lt;li&gt;ID selector&lt;/li&gt;
&lt;li&gt;class or pseudo-class selector&lt;/li&gt;
&lt;li&gt;element selector&lt;/li&gt;
&lt;li&gt;universal element selector&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;the-css-box-model&#34;&gt;The CSS box model&lt;/h2&gt;
&lt;p&gt;The box model defines how elements are displayed on a webpage and how they are sized.&lt;br&gt;
In the box model, every element on a webpage can be seen as a rectangular box.&lt;/p&gt;
&lt;h2 id=&#34;universal-element--body-element&#34;&gt;Universal element &amp;amp; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element&lt;/h2&gt;
&lt;p&gt;Styles in &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; selector take effect because of inheritance. But the text-independent elements do not support inheritance.&lt;br&gt;
That is where &lt;em&gt;universal element&lt;/em&gt; selector is needed. It&amp;rsquo;s styles take effect on all element.&lt;/p&gt;
&lt;p&gt;When we want to set  padding and margin of all elements to &lt;code&gt;0&lt;/code&gt;. Must put the code in universal element selector.&lt;/p&gt;
&lt;h2 id=&#34;inline-elements--block-elements&#34;&gt;Inline elements &amp;amp; Block elements&lt;/h2&gt;
&lt;p&gt;Inline elements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Occupies only the space necessary for its content.&lt;/li&gt;
&lt;li&gt;Box model applies in different way: &lt;strong&gt;heights and widths do no apply&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Paddings and margins are applied &lt;strong&gt;only horizontally&lt;/strong&gt;(left and right).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Block elements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;100% of parent&amp;rsquo;s width&lt;/li&gt;
&lt;li&gt;vertivally, one after another&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inline-Block elements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Good example is &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-3-ways-of-building-layouts-with-css&#34;&gt;The 3 ways of building layouts with CSS&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Float Layouts&lt;/code&gt;: The &lt;strong&gt;old way of building layouts&lt;/strong&gt;, using the float CSS property. Still used, but getting outdated fase.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Element is removed from the normal flow: &lt;em&gt;out of&lt;/em&gt; flow. Like absolutely positioning.&lt;/li&gt;
&lt;li&gt;Text and inline elements will wrap around the floated elements. Different from absolutely elements.&lt;/li&gt;
&lt;li&gt;The container will &lt;em&gt;NOT&lt;/em&gt; adjust its height to the elements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;FlexBox&lt;/code&gt;: Modern way of laying out elements in a &lt;strong&gt;1-dimensional row&lt;/strong&gt; without using floats. Prefect for &lt;strong&gt;component layouts&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One of its most useful applications is &lt;strong&gt;vertical centering&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Flex container property:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gap&lt;/code&gt;: To create space between items.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;justify-content&lt;/code&gt;: To align items along main axis(&lt;strong&gt;horizontally&lt;/strong&gt;, by default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-items&lt;/code&gt;: To align items along cross axis(&lt;strong&gt;vertically&lt;/strong&gt;, by dedauly)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-wrap&lt;/code&gt;: To allow items to &lt;strong&gt;wrap into a new line&lt;/strong&gt; if they are too large&lt;/li&gt;
&lt;li&gt;&lt;code&gt;align-content&lt;/code&gt;: Only applies when there are multiple lines(flex-wrap: wrap)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flex Items property:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;align-self&lt;/code&gt;: To overwrite align-items for individual flex items.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-grow&lt;/code&gt;: To allow an element to &lt;strong&gt;grow&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-shrink&lt;/code&gt;: To allow an element to &lt;strong&gt;shrink&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-basis&lt;/code&gt;: To define an item&amp;rsquo;s width, &lt;strong&gt;instead of the width&lt;/strong&gt; property.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex&lt;/code&gt;: &lt;strong&gt;Recommended shorthand&lt;/strong&gt; for flex-grow, -shrink, -basis.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;CSS Grid&lt;/code&gt;: For laying out elements in a fully-fledged &lt;strong&gt;2-dimensional grid&lt;/strong&gt;. Perfect for page layouts and complex components.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CSS grid is a set of &lt;strong&gt;CSS properties&lt;/strong&gt; for building &lt;strong&gt;2-dimensional&lt;/strong&gt; layouts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The main idea behind CSS Grid is that we &lt;strong&gt;divide a container element into rows and columns&lt;/strong&gt; that can be filled with its child elements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSS grid is &lt;strong&gt;not meant to replace flexbox!&lt;/strong&gt;. Instead, they work perfectly together. Need a &lt;strong&gt;1D&lt;/strong&gt; layouts? Use flexbox. Need a &lt;strong&gt;2D&lt;/strong&gt; layout? Use CSS grid&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grid container&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grid-template-rows/grid-template-columns: To establish the grid &lt;strong&gt;row and column tracks&lt;/strong&gt;. One length uniit for each track. Any unit can be used, new &lt;strong&gt;fr&lt;/strong&gt; fills unused space&lt;/li&gt;
&lt;li&gt;row-gap/colum-gap: To &lt;strong&gt;create empty space&lt;/strong&gt; between tracks&lt;/li&gt;
&lt;li&gt;justify-items/align-items: To align items inside rows/columns(&lt;strong&gt;horizontally/vertically&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grid items&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grid-column/grid-row: To &lt;strong&gt;place a grid item&lt;/strong&gt; into a specific cell, based on line numbers. span keyword can be used to span an item across more cells&lt;/li&gt;
&lt;li&gt;justify-self/align-self: To &lt;strong&gt;overwrite&lt;/strong&gt; justify-items/align-items for single items&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;css-tips&#34;&gt;CSS tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Class selector is more commonly used than ID selector, as &lt;code&gt;ID&lt;/code&gt; is &lt;em&gt;unique&lt;/em&gt; in HTML. For scalability, &lt;strong&gt;remember always using class selector&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;We should always specify all the four state of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element in order, which including &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;visited&lt;/code&gt;, &lt;code&gt;hover&lt;/code&gt; and &lt;code&gt;active&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
- https://wangloo.github.io/blog/posts/html-css-learning/0/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>Vim Tutorial</title>
        <link>https://wangloo.github.io/blog/posts/vim-tutorial/</link>
        <pubDate>Mon, 09 May 2022 19:28:12 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/vim-tutorial/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/vim-tutorial/ -&lt;p&gt;Search a word quickly: put cursor on the word, press &lt;code&gt;/&lt;/code&gt; and press &lt;code&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;C-W&amp;gt;&lt;/code&gt;.&lt;/p&gt;
- https://wangloo.github.io/blog/posts/vim-tutorial/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>reveal.js Tutorial</title>
        <link>https://wangloo.github.io/blog/posts/revealjs-tutorial/</link>
        <pubDate>Sun, 08 May 2022 19:34:44 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/revealjs-tutorial/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/revealjs-tutorial/ -&lt;h1 id=&#34;change-code-theme&#34;&gt;Change code theme&lt;/h1&gt;
&lt;p&gt;Default use &lt;code&gt;monokai.css&lt;/code&gt;. see &lt;a href=&#34;https://revealjs.com/code/&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改需要下载新的&lt;code&gt;css&lt;/code&gt;放到&lt;code&gt;plugin/highlight/&lt;/code&gt;目录下.&lt;/p&gt;
&lt;p&gt;其他可用的&lt;code&gt;css&lt;/code&gt;在&lt;a href=&#34;https://github.com/highlightjs/highlight.js/tree/main/src/styles&#34;&gt;highlight.js仓库&lt;/a&gt;中下载.&lt;/p&gt;
&lt;h1 id=&#34;align&#34;&gt;Align&lt;/h1&gt;
&lt;h2 id=&#34;slide-align&#34;&gt;Slide Align&lt;/h2&gt;
&lt;p&gt;取消center对齐方式:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#75af00&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75af00&#34;&gt;center&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#111&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所有slide左对齐: &lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/1897&#34;&gt;https://github.com/hakimel/reveal.js/issues/1897&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用markdown写的方式下使某一幻灯片左对齐: &lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/890#issuecomment-129735291&#34;&gt;https://github.com/hakimel/reveal.js/issues/890#issuecomment-129735291&lt;/a&gt;&lt;/p&gt;
- https://wangloo.github.io/blog/posts/revealjs-tutorial/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>A64 Instruction Set</title>
        <link>https://wangloo.github.io/blog/posts/armv8/a64_isa/</link>
        <pubDate>Sat, 07 May 2022 21:19:01 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/armv8/a64_isa/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/armv8/a64_isa/ -&lt;h1 id=&#34;loadstore-addressing&#34;&gt;Load/Store Addressing&lt;/h1&gt;
&lt;h2 id=&#34;addressing-mode&#34;&gt;Addressing mode&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Base register - &lt;code&gt;w0=[x1]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;ldr&lt;/span&gt;     &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Offset addressing mode - &lt;code&gt;w0=[x1+12]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;ldr&lt;/span&gt;     &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Pre-index addressing mode - &lt;code&gt;x1+=12; w0=[x1]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;ldr&lt;/span&gt;     &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Post-index addressing mode - &lt;code&gt;w0=[x1]; x1+=12&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#111&#34;&gt;ldr&lt;/span&gt;     &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;loadstore-instruction-example&#34;&gt;Load/store instruction example&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// load a byte from x1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ldrb&lt;/span&gt;    &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// load a signed byte from x1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ldrsb&lt;/span&gt;   &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// store a 32-bit word to address in x1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;str&lt;/span&gt;     &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// load two 32-bit words from stack, then add 8-byte to sp
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ldp&lt;/span&gt;     &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;w1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;sp&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// store two 64-bit words at [sp-96] and subtract 96-byte from sp.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;stp&lt;/span&gt;     &lt;span style=&#34;color:#111&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;x2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;sp&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// load 32-bit immediate from literal pool(addr: 0x12345678)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ldr&lt;/span&gt;     &lt;span style=&#34;color:#111&#34;&gt;w0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0x12345678&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;interesting-features&#34;&gt;Interesting Features&lt;/h1&gt;
&lt;h2 id=&#34;-before-the-immediate-value&#34;&gt;&amp;lsquo;#&amp;rsquo; before the immediate value&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A64 assembly language does not require the &lt;code&gt;#&lt;/code&gt; to introduce constant immediate value. But the assembler can also indentify the &lt;code&gt;#&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In armv7, there must be a &lt;code&gt;#&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt; before other than using &lt;code&gt;.syntax unified&lt;/code&gt;. &lt;a href=&#34;https://sourceware.org/binutils/docs/as/ARM_002dInstruction_002dSet.html#ARM_002dInstruction_002dSet&#34;&gt;About syntax unified&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/21652884/is-the-hash-required-for-immediate-values-in-arm-assembly&#34;&gt;Agreed Recommendation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;.syntax unified&lt;/code&gt; in v7 code, and never use &lt;code&gt;#&lt;/code&gt; on any literal on either v7 or v8.
Unified syntax is newer and better, and those &lt;code&gt;#&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; signs are just more code noise.&lt;/p&gt;
&lt;/blockquote&gt;
- https://wangloo.github.io/blog/posts/armv8/a64_isa/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>ARMv8-A Register</title>
        <link>https://wangloo.github.io/blog/posts/armv8/register/</link>
        <pubDate>Sat, 07 May 2022 20:19:44 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/armv8/register/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/armv8/register/ -&lt;h1 id=&#34;classification&#34;&gt;Classification&lt;/h1&gt;
&lt;h2 id=&#34;general-purpose-register&#34;&gt;General-purpose Register&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;x0-x7&lt;/code&gt; 参数寄存器: Restore function parameters and return vaule.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x9-x15&lt;/code&gt; caller-saved 临时寄存器: callee 默认可以直接使用来保存临时变量, 不需要保存和恢复. 如果 caller 在里面存储了非临时信息, 那么在函数调用之前应当由 caller 负责保存.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x19-x28&lt;/code&gt; callee-saved 寄存器: callee 应该避免使用. 如果必须要使用，那么在返回前必须恢复.&lt;/li&gt;
&lt;li&gt;special registers:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x8&lt;/code&gt; restore indirect result. Commonly used when returning a struct.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x18&lt;/code&gt; platform reserved register.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x29&lt;/code&gt; frame pointer register(FP).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x30&lt;/code&gt; link register(LR).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;All general-purpose register &lt;code&gt;xN&lt;/code&gt; is 64-bit width. They all have corresponding &lt;code&gt;wN&lt;/code&gt; register using the lower 32-bit of &lt;code&gt;xN&lt;/code&gt;. And write to &lt;code&gt;wN&lt;/code&gt; will clear the upper 32bit of &lt;code&gt;xN&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;special-register-per-el&#34;&gt;Special Register per EL&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sp_el0/1/2/3&lt;/code&gt; stack pointer register of each EL.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;elr_el1/2/3&lt;/code&gt; exception link register of each EL except EL0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spsr_el1/2/3&lt;/code&gt; save program status register of each EL except EL0.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;sp&lt;/code&gt; is an alias of &lt;code&gt;sp_el0&lt;/code&gt;. Do NOT treat &lt;code&gt;sp&lt;/code&gt; as general-purpose register.&lt;/p&gt;
&lt;/blockquote&gt;
- https://wangloo.github.io/blog/posts/armv8/register/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>Numberical Analysis Exam</title>
        <link>https://wangloo.github.io/blog/posts/numberical-analysis/</link>
        <pubDate>Sat, 07 May 2022 18:04:58 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/numberical-analysis/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/numberical-analysis/ -&lt;p&gt;&lt;img src=&#34;qingdao-tzjt.JPG&#34; alt=&#34;qingdao&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;考试大纲&#34;&gt;考试大纲&lt;/h1&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;第二章-非线性方程方程组的求解&#34;&gt;第二章 非线性方程/方程组的求解&lt;/h2&gt;
&lt;h3 id=&#34;1-二分法及迭代&#34;&gt;1. 二分法及迭代&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;二分法误差估计定理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-不动点迭代&#34;&gt;2. 不动点迭代&lt;/h3&gt;
&lt;p&gt;不动点: 将$f(x)=0$转化为等价形式$x=\varphi(x)$, $f(x)$的零点就等价于函数$\varphi(x)$的不动点.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不动点及不动点迭代的概念&lt;/li&gt;
&lt;li&gt;迭代格式的选择? 是否收敛?&lt;/li&gt;
&lt;li&gt;迭代的初值是否合适?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-牛顿法解非线性方程&#34;&gt;3. 牛顿法解非线性方程&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 如果函数&lt;code&gt;f(x)&lt;/code&gt;是线性的, 那么它的求根问题就会简化. 牛顿法实质上是一种线性化方法, 将非线性方程逐步归结为某种线性方程来求解.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;牛顿法的迭代格式:
$$
x^{k+1} = x^k - \frac{f(x^k)}{f^&amp;rsquo;(x^k)}
$$&lt;/p&gt;
&lt;h3 id=&#34;4-弦截法&#34;&gt;4. 弦截法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 弦截法是牛顿法的一个改进. 牛顿法求根时需要计算&lt;code&gt;f&#39;(x)&lt;/code&gt;, 而导数的计算往往困难. 弦截法使用&lt;em&gt;差商&lt;/em&gt;来回避导数的计算.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;5-迭代法解方程的收敛阶&#34;&gt;5. 迭代法解方程的收敛阶&lt;/h3&gt;
&lt;h3 id=&#34;6-非线性方程组的牛顿迭代格式&#34;&gt;6. 非线性方程组的牛顿迭代格式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;雅可比矩阵是什么?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;第三章-直接法解线性方程组&#34;&gt;第三章 直接法解线性方程组&lt;/h2&gt;
&lt;h3 id=&#34;1-gauss消元法&#34;&gt;1. Gauss消元法&lt;/h3&gt;
&lt;p&gt;求解过程的算法复杂度为&lt;code&gt;O(n^2)&lt;/code&gt;, 消元过程的算法复杂度为&lt;code&gt;O(n^3)&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;2-直接三角分解法doolittle分解法&#34;&gt;2. 直接三角分解法(Doolittle分解法)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: &lt;code&gt;直接&lt;/code&gt;意味着可以由A的元素直接计算L和U, 不需要任何的中间步骤.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一旦L和U得到, 求解&lt;code&gt;Ax=b&lt;/code&gt;就可以等价表示为求解两个三角形方程组:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ly=b, 求y&lt;/li&gt;
&lt;li&gt;Ux=y. 求x&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;第四章-迭代法解线性方程组&#34;&gt;第四章 迭代法解线性方程组&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 对于线性方程组&lt;code&gt;Ax=b&lt;/code&gt;, 当A为低阶稠密矩阵时, [选主元消去法]是求解的有效方法.&lt;br&gt;
但是实际情况中A大都是&lt;em&gt;巨型的稀疏矩阵&lt;/em&gt;, 这是采用迭代法来求解是合适的. 迭代法可以利用A中有大量零元素的特点.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;迭代法&lt;em&gt;不一定&lt;/em&gt;最终能够逼近方程组的解, 认识误差向量的概念.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-jacobi迭代&#34;&gt;1. Jacobi迭代&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV14F411e7Ji?p=2&amp;amp;spm_id_from=pageDriver&#34;&gt;雅可比迭代格式和收敛性的判别&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV14F411e7Ji?p=4&amp;amp;t=76.0&#34;&gt;快速计算Bj的特征值&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV14F411e7Ji?p=4&amp;amp;t=268.1&#34;&gt;Jacobi迭代由A直接看出Bj&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-seidel迭代&#34;&gt;2. Seidel迭代&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV14F411e7Ji?p=6&#34;&gt;Seidel迭代收敛格式和收敛性的判别&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Seidel迭代独有的判断收敛性的方式: 若A为&lt;code&gt;对称阵&lt;/code&gt;, 且A&lt;code&gt;正定&lt;/code&gt;, 那么迭代收敛.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;第五章-插值法&#34;&gt;第五章 插值法&lt;/h2&gt;
&lt;h3 id=&#34;1-插值方法与插值问题&#34;&gt;1. 插值方法与插值问题&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 仅已知某些点和该点的函数值的情况下, 如何模拟一个插值函数&lt;code&gt;P(x)&lt;/code&gt;, 使得误差最小.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;什么是插值函数P(x)? 被插函数? 插值节点? 插值余项?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-多项式插值&#34;&gt;2. 多项式插值&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可证明多项式P(x)存在唯一.&lt;/li&gt;
&lt;li&gt;多项式插值通过解方程组就能得到解&lt;code&gt;(a0, a1,..., an)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-拉格朗日插值公式&#34;&gt;3. 拉格朗日插值公式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 虽然上面的多项式插值能否解决n+1个点的光滑函数, 且解是唯一的. 但是&lt;strong&gt;解方程组是很麻烦的&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;拉格朗日插值公式:
$$
L_n(x) = l_0(x)y_0 + l_1(x)y_1 + \dots + l_n(x)y_n
$$
插值基函数:&lt;/p&gt;
&lt;p&gt;插值条件(插值系数):
$$
y_0 = f(x_0), y_1 = f(x_1), \dots,y_n = f(x_n)
$$&lt;/p&gt;
&lt;p&gt;误差余项Rn(x)&lt;/p&gt;
&lt;h3 id=&#34;4-牛顿插值公式&#34;&gt;4. 牛顿插值公式&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 给定5个插值节点及其函数值, 可以得到L4(x); 由于某种原因, 需要加入一个新的插值节点. Lagrange插值法之前的计算结果(l)均失效, 需要重新计算. 非常的不方便.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;牛顿法是基于&lt;strong&gt;差商&lt;/strong&gt;的概念. 导数是差商的极限.&lt;/li&gt;
&lt;li&gt;差商的差商是高阶差商.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;牛顿插值法的插值函数(以二次插值举例):
$$
P(x) = a_0 + a_1(x-x_0) + a_2(x-x_0)(x-x_1)
$$
需要做的就是解出系数&lt;code&gt;a0,a1,...&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;所以引入差商的符号:
$$
a_1=f[x_0,x_1]=\frac{f(x_1)-f(x_0)}{x_1-x_0}
$$
$$
a_2=f[x_0,x_1,x_2]=\frac{f[x_1,x_2]-f[x_0,x_1]}{x_2-x_0}
$$&lt;/p&gt;
&lt;h3 id=&#34;5-hermite插值&#34;&gt;5. Hermite插值&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 有时我们已知的条件不都是函数值, 也有导数值. 例如已知两个点的函数值和两个点的导数值, 可以应用Heimite插值法得到三次多项式.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hermite插值又称Newten-Hermite插值, 即它的计算方式与Newten法类似, 也需要写出差商表, 只是处理上有一些需要注意的点.&lt;/p&gt;
&lt;p&gt;Hermite插值方法的余项证明与Langrange插值法相同.&lt;/p&gt;
&lt;h3 id=&#34;6-分段低次插值&#34;&gt;6. 分段低次插值&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 次数太高的多项式插值的效果不好. 比如龙格现象.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;分段: 把被插值函数所在的大区间分成一个个的小区间.&lt;/li&gt;
&lt;li&gt;低次: 每个小区间上用次数不超过&lt;code&gt;3&lt;/code&gt;的函数来逼近&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;61-分段线性插值&#34;&gt;6.1 分段线性插值&lt;/h4&gt;
&lt;p&gt;就是分段折线&lt;/p&gt;
&lt;p&gt;分段线性插值的优点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简单&lt;/li&gt;
&lt;li&gt;当二阶导数趋近0时, 一定收敛&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;分段线性插值的缺点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分段折线不光滑, 分段点处不能求导.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;62-分段hermite插值&#34;&gt;6.2 分段Hermite插值&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 为了解决分段线性插值的缺点(存在尖点).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;已知函数在(n+1)个点的函数值值以及其导数值, 去构造一阶连续可导函数.&lt;/p&gt;
&lt;p&gt;分段Hermite插值根据(n+1)个已知点划分为(n+1)个区间. 这样在每个小区间上都已知&lt;code&gt;4&lt;/code&gt;个条件, 可以使用&lt;code&gt;3&lt;/code&gt;次Hermite插值.&lt;/p&gt;
&lt;p&gt;结论: 已知(2n+2)个条件的情况下, 居然只得到&lt;strong&gt;一阶连续可微函数&lt;/strong&gt;. 结论太差!&lt;/p&gt;
&lt;h4 id=&#34;63-样条插值&#34;&gt;6.3 样条插值&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 为了解决分段Hermite插值给了那么多条件, 得出的结论太差的情况. 样条插值的条件只是&lt;code&gt;n+1&lt;/code&gt;个已知点的函数值就可以. 不需要导数值.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;给定&lt;code&gt;n+1&lt;/code&gt;个已知点的情况下, 能划分为&lt;code&gt;n&lt;/code&gt;个区间.&lt;/p&gt;
&lt;p&gt;每个区间用三次插值, 即有4个系数需要求解. 所有的区间就一共有4n个系数需要求解. &lt;code&gt;4n&lt;/code&gt;个系数对应&lt;code&gt;4n&lt;/code&gt;个方程来解. 而利用已知的条件:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;n+1&lt;/code&gt;个点&lt;/li&gt;
&lt;li&gt;区间端点处的函数值相等&lt;/li&gt;
&lt;li&gt;区间端点处的一阶导数值相等&lt;/li&gt;
&lt;li&gt;区间端点处的二阶导数值相等&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;只能构造&lt;code&gt;4n-2&lt;/code&gt;个方程, 还差两个方程. 所以需要用到边界处理来添加方程.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;样条插值的边界处理&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已知端点的一阶导数值或二阶导数值: 大多数&lt;strong&gt;未知&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;自然边界条件: 端点值=0的情况不多.&lt;/li&gt;
&lt;li&gt;周期条件: 大部分函数&lt;strong&gt;不满足&lt;/strong&gt;周期条件. 是周期函数也不会用多项式插值.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;第六章-拟合&#34;&gt;第六章 拟合&lt;/h2&gt;
&lt;p&gt;🔍 &lt;strong&gt;插值, 拟合, 逼近的区别&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插值: 没有给定原函数. 要求根据已知点的函数值或导数值, 给出一个满足已知条件的简单函数&lt;/li&gt;
&lt;li&gt;逼近: 已知原函数的情况下, 找一个&lt;strong&gt;简单函数&lt;/strong&gt;能够逼近原函数, 并在其定义域上的误差达到最小&lt;/li&gt;
&lt;li&gt;拟合: 没有给定原函数, 要求根据已知点的函数值找到函数空间内使得总误差(常使用均方误差)最小的那个简单函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;1-最佳平方逼近&#34;&gt;1. 最佳平方逼近&lt;/h4&gt;
&lt;h4 id=&#34;2-最小二乘法&#34;&gt;2. 最小二乘法&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 已知不共线的三点, 如何确定一条&lt;strong&gt;可信&lt;/strong&gt;的直线.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;三个点可以用插值来模拟二次多项式, 但题目要求了用一次多项式, 这是插值无法做到的.&lt;/p&gt;
&lt;p&gt;不共线的三点不可能同时经过一条直线, 所以要用逼近的思想. 找一条近似的直线, 使得&lt;strong&gt;误差&lt;/strong&gt;最小.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;与插值的区别&lt;/strong&gt;: 插值是明确给出&lt;code&gt;n+1&lt;/code&gt;个插值条件, 得到&lt;code&gt;n&lt;/code&gt;次多项式.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如何定义误差最小?&lt;/strong&gt;: 函数间的距离.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-线性拟合&#34;&gt;1. 线性拟合&lt;/h3&gt;
&lt;p&gt;拟合的函数是&lt;code&gt;n&lt;/code&gt;次多项式, 可转化为超定方程&lt;code&gt;GX&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其中规定&lt;code&gt;G&lt;/code&gt;为系数矩阵, &lt;code&gt;X&lt;/code&gt;为变量的列向量.&lt;/li&gt;
&lt;li&gt;同时定义列向量&lt;code&gt;F&lt;/code&gt;为给出的函数值.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GX=F&lt;/code&gt;是超定方程组, 没有准确解. 得到残差最小的解的方法即&lt;strong&gt;最小二乘法&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以线性拟合的残差&lt;code&gt;r = |GX - F|&lt;/code&gt;, 而找到目标函数的宗旨就是使&lt;code&gt;r&lt;/code&gt;最小. 使用&lt;strong&gt;初等变分原理&lt;/strong&gt;将这个问题转化为&lt;strong&gt;正规方程组&lt;/strong&gt;求解的问题.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;第七章-数值积分&#34;&gt;第七章 数值积分&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 定积分的计算中可能无法找到原函数的情况. 考虑定积分的本质是一句具体的数, 我们的目标就是找到这个数的近似值, 越接近越好.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决的两种思路: &lt;code&gt;积分中值定理&lt;/code&gt; 和 &lt;code&gt;插值型求积公式(近似被积函数)&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;1-积分中值定理&#34;&gt;1. 积分中值定理&lt;/h3&gt;
&lt;p&gt;基本的积分中值定理:
$$
\int_{a}^{b}f(x)dx = f(\xi)(b-a)
$$&lt;/p&gt;
&lt;p&gt;将一个区域的面积转化为矩形的面积. 如何确定矩形的高呢? &lt;code&gt;左矩阵&lt;/code&gt;, &lt;code&gt;右矩阵&lt;/code&gt;, &lt;code&gt;中间矩阵&lt;/code&gt;, &lt;code&gt;梯形公式&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;更常用的积分公式是 在乘积函数积分中, 如果&lt;code&gt;g(x)&lt;/code&gt;不变号, 则有:
$$
\int_{a}^{b}g(x)f(x)dx =f(\xi)\int_{a}^{b}g(x)dx
$$&lt;/p&gt;
&lt;h3 id=&#34;2-插值型求积公式&#34;&gt;2. 插值型求积公式&lt;/h3&gt;
&lt;p&gt;在被积函数很复杂的情况下, 可以对其进行近似处理, 例如使用&lt;code&gt;Lagrange插值法&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&#34;二次插值-simpson公式&#34;&gt;二次插值: Simpson公式&lt;/h4&gt;
&lt;p&gt;取二次插值的步长&lt;code&gt;h=(b-a)/2&lt;/code&gt;, 即增加一个插值节点&lt;code&gt;(b-a)/2&lt;/code&gt;, Simpson公式化简的结果为:
$$
\int_{a}^{b}f(x)dx = \frac{b-a}{6}[f(a)+4f(\frac{a+b}{2})+f(b)]+R[f]
$$&lt;/p&gt;
&lt;p&gt;📌 Simpson公式满足&lt;code&gt;3&lt;/code&gt;阶代数精度. 虽然它只是二次插值得到的.&lt;/p&gt;
&lt;h3 id=&#34;3-余项&#34;&gt;3. 余项&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;插值型求积公式的余项, 即对应的插值方法(如Lagrange, Newton)的余项在区间上的积分.&lt;/li&gt;
&lt;li&gt;梯形公式方法的余项可以用&lt;strong&gt;积分中值定理&lt;/strong&gt;来优化.&lt;/li&gt;
&lt;li&gt;Simpson公式的余项&lt;strong&gt;不能&lt;/strong&gt;使用积分中值定理来优化, 因为不满足保号的条件.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-衡量求积公式的好坏&#34;&gt;4. 衡量求积公式的好坏&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;代数精度&lt;/strong&gt;: 不是一种误差, 而是对误差的描述.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simpson公式满足&lt;code&gt;3&lt;/code&gt;阶代数精度. 虽然它只是二次插值得到的.&lt;/li&gt;
&lt;li&gt;如何得知某个公式的代数精度: 只要带入一个m次多项式验证余项是否为0即可.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5复合求积公式&#34;&gt;5.复合求积公式&lt;/h3&gt;
&lt;p&gt;为了提高精度通常把积分区间分为若干个子区间, 再在每个子区间上应用低阶求积公式.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;复合梯形公式&lt;/code&gt;: 将区间等分.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;复合simpson公式&lt;/code&gt;: 将区间偶数等分.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;第八章-常微分方程初值问题数值解法&#34;&gt;第八章 常微分方程初值问题数值解法&lt;/h2&gt;
&lt;p&gt;将研究的内容进一步限定为: &lt;code&gt;一阶初值问题&lt;/code&gt;, &lt;code&gt;单步法&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;背景: 在无法给出解析表达式时如果利用数值方法求出&lt;code&gt;y&lt;/code&gt;的近似解?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-简单的数值方法&#34;&gt;1. 简单的数值方法&lt;/h3&gt;
&lt;h4 id=&#34;11-euler公式&#34;&gt;1.1 Euler公式&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;一阶向前差商&lt;/code&gt;近似替代&lt;code&gt;y&#39;&lt;/code&gt;. 得到递推的数列表达式:
$$
y_{n+1} = y_{n} + hf(x_n,y_n), n=0,1,2,&amp;hellip;
$$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;误差&lt;/strong&gt;: Euler法使用的近似代替只有&lt;code&gt;一阶精度&lt;/code&gt;, 所以误差很大. 此时有两种解决方案:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加细步长&lt;code&gt;h&lt;/code&gt;, 若不行再加细. 总是能得到正确的, 如果你不嫌弃带来的计算变得缓慢的问题.&lt;/li&gt;
&lt;li&gt;换方法.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;12-梯形公式&#34;&gt;1.2 梯形公式&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;背景:为得到比Euler法精度更高的计算公式. 梯形公式具有&lt;code&gt;二阶&lt;/code&gt;精度.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对&lt;code&gt;y&#39; = f(x,y)&lt;/code&gt;的两端进行&lt;strong&gt;局部的&lt;/strong&gt;积分, 然后用梯形公式近似计算右边.&lt;/p&gt;
&lt;h4 id=&#34;13-改进euler公式&#34;&gt;1.3 改进Euler公式&lt;/h4&gt;
&lt;p&gt;先用欧拉公式求得一个&lt;code&gt;近似的yn+1&lt;/code&gt;, 带入梯形公式, 得到&lt;code&gt;矫正的yn+1&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;2-龙格-库塔方法&#34;&gt;2. 龙格-库塔方法&lt;/h3&gt;
&lt;h3 id=&#34;3-局部截断误差&#34;&gt;3. 局部截断误差&lt;/h3&gt;
&lt;p&gt;一个初值问题的局部截断误差&lt;code&gt;Tn+1&lt;/code&gt;定义为:
$$
T_{n+1} = y(x_{n+1}) - y(x_n) - f(x,y)
$$
叫做局部误差是因为假设&lt;code&gt;xn&lt;/code&gt;在前各步没有误差, 仅考虑该&lt;code&gt;xn&lt;/code&gt;到&lt;code&gt;xn+1&lt;/code&gt;产生的误差.&lt;/p&gt;
&lt;p&gt;$$
\sum_{k=1}^{n} l_{11}
$$&lt;/p&gt;
- https://wangloo.github.io/blog/posts/numberical-analysis/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>LaTeX Vim Tutorial</title>
        <link>https://wangloo.github.io/blog/posts/latex-vim-tutorial/</link>
        <pubDate>Wed, 04 May 2022 17:07:51 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/latex-vim-tutorial/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/latex-vim-tutorial/ -&lt;h2 id=&#34;use-plugin-vimtex&#34;&gt;Use plugin &lt;code&gt;vimtex&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Vim build-in support of LaTeX files is just OK. When we need more excellent exprience, good plugins is very recommended.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lervag/vimtex#configuration&#34;&gt;vimtex&lt;/a&gt; is a nice and modern vim plugin for LaTeX files.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Useful Futures of vimtex IMO&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ll&lt;/code&gt; Complier. By default, it will auto-complier when you type &lt;code&gt;:w&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;lt&lt;/code&gt; Open content tree as a sidebar.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;lv&lt;/code&gt; View PDF with configured PDF viewer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;li&lt;/code&gt; File information.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cse&lt;/code&gt; Change surrounding &lt;code&gt;\begin \end&lt;/code&gt; environment.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tse&lt;/code&gt; Exchange between &lt;code&gt;\begin{env}&lt;/code&gt; and &lt;code&gt;\begin{env*}&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tsc&lt;/code&gt; Exchange between &lt;code&gt;\command{}&lt;/code&gt; and &lt;code&gt;\command*{}&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 
 &lt;/p&gt;
&lt;h2 id=&#34;add-support-of-simplified-chinese&#34;&gt;Add Support of Simplified Chinese&lt;/h2&gt;
&lt;h3 id=&#34;install-xetex&#34;&gt;Install &lt;code&gt;xetex&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;I use &lt;code&gt;xetex&lt;/code&gt; to add supports for Chinese fonts in LaTex files. Actually the magician is amacro package of &lt;code&gt;xetex&lt;/code&gt; named &lt;code&gt;xeCJK&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And &lt;code&gt;xetex&lt;/code&gt; is included in&lt;code&gt;texlive&lt;/code&gt;. so we install it from source:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install texlive-xetex
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;install-chinese-font&#34;&gt;Install Chinese Font&lt;/h3&gt;
&lt;p&gt;If there is no Chinese font in your system, you must install one. I choose WinQingYuan microhei as a instance.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install ttf-wqy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Excute &lt;code&gt;fc-list&lt;/code&gt; to check if install successfully, here is excepted output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fc-list  &lt;span style=&#34;color:#111&#34;&gt;|&lt;/span&gt; grep wqy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/share/fonts/truetype/wqy/wqy-microhei.ttc: WenQuanYi Micro Hei,文泉驛微米黑,文泉驿微米黑:style&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Regular
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/share/fonts/truetype/wqy/wqy-microhei.ttc: WenQuanYi Micro Hei Mono,文泉驛等寬微米黑,文泉驿等宽微米黑:style&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Regular
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;configure-your-tex-file&#34;&gt;Configure your tex file&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;\documentclass&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;article&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;\usepackage&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;xeCJK&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;\setCJKmainfont&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;WenQuanYi Micro Hei&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;\begin&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;document&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello, LaTeX!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;你好, LaTex!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;\end&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;document&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Complier it and see, the Chinese font is displayed!&lt;/p&gt;
&lt;p&gt; 
 &lt;/p&gt;
&lt;h2 id=&#34;confusing-tools&#34;&gt;Confusing Tools&lt;/h2&gt;
&lt;h3 id=&#34;difference-between-pdfluaxetex-and-pdfluaxelatex&#34;&gt;Difference between {pdf,lua,xe}Tex and {pdf,lua,xe}LaTeX&lt;/h3&gt;
&lt;p&gt;If a &lt;code&gt;.tex&lt;/code&gt;file starts with &lt;code&gt;\documentclass&lt;/code&gt;, it&amp;rsquo;s a &lt;em&gt;LaTex&lt;/em&gt; format file rather than the &lt;em&gt;Plain Tex&lt;/em&gt; format file.&lt;/p&gt;
&lt;p&gt;The LaTeX format file has some specific macro like &lt;code&gt;\documentclass&lt;/code&gt; that cannot be compliered by &lt;code&gt;[pdf]Tex&lt;/code&gt;, so that&amp;rsquo;s the job of &lt;code&gt;[pdf]LaTeX&lt;/code&gt;. Same goes for other engines.&lt;/p&gt;
&lt;h3 id=&#34;what-is-xetexxelatex&#34;&gt;What is &lt;code&gt;xetex/xelatex&lt;/code&gt;?&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;xetex/xelatex&lt;/code&gt; is one of the TeX/LaTeX engines. Others are &lt;code&gt;pdfTex&lt;/code&gt;, &lt;code&gt;LuaTex&lt;/code&gt;, etc. &lt;a href=&#34;https://fr.wikipedia.org/wiki/XeTeX&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xetex/xelatex&lt;/code&gt; add fonts and character sets support for TeX/LaTeX file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Treat input as Unicode&lt;/li&gt;
&lt;li&gt;Allow us to use many system fonts in LaTeX file easily&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;what-is-latexmk&#34;&gt;What is &lt;code&gt;latexmk&lt;/code&gt;?&lt;/h3&gt;
&lt;p&gt;LaTeXmk 是一个集成化的命令行工具, it must work with one LaTeX engine.&lt;/p&gt;
&lt;p&gt;The fundamental issue that &lt;code&gt;latexmk&lt;/code&gt; solves is that the number of runs of &lt;code&gt;[pdf]latex&lt;/code&gt; is highly dynamically dependent on the document and the class file used. &lt;code&gt;latex&lt;/code&gt; just need to be run once a time.&lt;/p&gt;
&lt;h3 id=&#34;different-between-ctexmiktextexlive-&#34;&gt;Different between &lt;code&gt;CTeX&lt;/code&gt;/&lt;code&gt;MiKTeX&lt;/code&gt;/&lt;code&gt;TeXlive&lt;/code&gt; ?&lt;/h3&gt;
&lt;p&gt;They are all 包含与.tex文件关联的各种编辑、查看工具、常用宏包及文档.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ctex.org/HomePage&#34;&gt;CTex&lt;/a&gt; packages add complete Chinese support based on &lt;a href=&#34;https://miktex.org/&#34;&gt;MiKTeX&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CTex is only avilable in windows.&lt;/li&gt;
&lt;/ul&gt;
- https://wangloo.github.io/blog/posts/latex-vim-tutorial/ - @2019 Notepadium.</description>
        </item>
    
    
    
        <item>
        <title>Portability Issues</title>
        <link>https://wangloo.github.io/blog/posts/reading-notes/expert_c_programming/portability_issues/</link>
        <pubDate>Sun, 01 May 2022 16:41:35 +0800</pubDate>
        
        <guid>https://wangloo.github.io/blog/posts/reading-notes/expert_c_programming/portability_issues/</guid>
        <description>Soben&#39;s Secret Base  https://wangloo.github.io/blog/posts/reading-notes/expert_c_programming/portability_issues/ -&lt;p&gt;When reading C standard documents, we usually see phrases like &amp;ldquo;&lt;strong&gt;Implementation-defined&lt;/strong&gt;&amp;rdquo;, &amp;ldquo;&lt;strong&gt;Unspecified&lt;/strong&gt;&amp;rdquo;,.etc.&lt;/p&gt;
&lt;p&gt;So, what do they really mean?&lt;/p&gt;
&lt;h2 id=&#34;术语&#34;&gt;术语&lt;/h2&gt;
&lt;p&gt;我们将这些难以直接理解的词汇称为&lt;strong&gt;术语&lt;/strong&gt;，在ANSI C中，术语可以分为描述不可移植代码(unportable), 坏代码(bad), 可移植的代码(portable)三类.&lt;/p&gt;
&lt;h3 id=&#34;unportable-code&#34;&gt;unportable code&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Implementation-defined&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要由编译器设计者决定采取何种行为，他们可能不同，但都不能说是错误的.&lt;br&gt;
例如：当整型数右移时，是否需要扩展符号位. &lt;a href=&#34;https://www.cnblogs.com/bluettt/p/16186598.html&#34;&gt;右移代替除法可能导致的灾难&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;unspecified&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在某些正确情况下的做法，标准并未明确规定应该怎样做.&lt;br&gt;
例如：参数求值的顺序.&lt;/p&gt;
&lt;h3 id=&#34;bad-code&#34;&gt;bad code&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;undefined&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在某些不正确情况下的做法，但标准并未规定应该怎样做。意味着你可以采取任何行动，可以什么都不做，也可以发出一条警告信息, 或者终止CPU重启等等. 你甚至可以发射核导弹(只要你安装了能发射核导弹的硬件系统).&lt;br&gt;
例如：当一个有符号整数溢出时该采取什么行动.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;constraint&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一个必须遵守的限制或要求. 如果你不遵守, 那么你的程序的行为就会变成如上所说的&lt;code&gt;undefined&lt;/code&gt;. 这出现了一种很有意思的情况: 分辨某种东西是否是一个&lt;code&gt;constaint&lt;/code&gt;是很容易的, 因为每个标准的主题都附有一个&lt;code&gt;constraint&lt;/code&gt;小节, 列出了所有的约束条件。&lt;br&gt;
例如: &lt;code&gt;%&lt;/code&gt;操作符的操作数必须为整型. 所以,在非整型数据上使用&lt;code&gt;%&lt;/code&gt;操作符肯定会导致&lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;portable-code&#34;&gt;portable code&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;strictly conforming&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;严格遵守标准的. 符合该条件的程序应当是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只使用已确定的特性&lt;/li&gt;
&lt;li&gt;不突破任何由编译器实现(Implementation-defined)的限制.&lt;/li&gt;
&lt;li&gt;不使用&lt;code&gt;unspecified&lt;/code&gt;和&lt;code&gt;undefined&lt;/code&gt;特性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样规定的目的是最大程序保证代码的可移植性. 但符合该术语的代码并不常见, 例如&lt;code&gt;INT_MAX&lt;/code&gt;的值在不同架构的机器上结果可能不同.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;comforming&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;遵循标准的; 一个遵循标准的程序可以依赖一些对于某种编译器特有的&lt;strong&gt;不可移植&lt;/strong&gt;的特性. 这样一个程序对于某个编译器可能是遵循标准的, 但对于另外一个编译器又是不遵循标准的.&lt;/p&gt;
- https://wangloo.github.io/blog/posts/reading-notes/expert_c_programming/portability_issues/ - @2019 Notepadium.</description>
        </item>
    
    
  </channel>
</rss> 