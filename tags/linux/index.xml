<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on BLOG</title><link>https://wangloo.github.io/tags/linux/</link><description>Recent content in linux on BLOG</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 11 May 2023 20:51:49 +0800</lastBuildDate><atom:link href="https://wangloo.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 内核数据结构 hlist</title><link>https://wangloo.github.io/posts/os/linux/data_struct/hlist/</link><pubDate>Thu, 11 May 2023 20:51:49 +0800</pubDate><guid>https://wangloo.github.io/posts/os/linux/data_struct/hlist/</guid><description>linux 内核为创建【用单链表解决冲突的哈希表】设计了专门的数据结构 hlist。
hlist 整体来说是带头结点的双向链表，头结点的类型为hlist_head, 普通节点 的类型为hlist_node. 为什么要区别两种类型？节约空间， 因为哈希表的 表项类型可以是hlist_head, 它其实不需要prev指针, 比起一般的结点，一个 哈希表能节约一半的空间。
所以一个哈希表和头结点的结构可表示为:
1 2 3 4 struct hlist_head { struct hlist_node *first; }; struct hlist_head table[TALBE_SZ]; 二象性 任何事物都具有二象性，区分两种类型节约空间的空间，也带了一个问题： 首个hlist_node结点的prev指向哪呢？
正常情况下肯定毫不犹豫的指向头结点，即hlist_head，但注意此时类型是 不同的，prev不能同时是struct hlist_head*和struct hlist_node *。
解决方案有两个，首先可以使首个结点的prev=NULL, 这样虽然避免了类型引发的 问题，也能保证功能正确，但是却破坏了一致性，使得操作的复杂度上升，增加了许多 判断分支。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 // delelt a node void del_node(struct hlist_head *head, struct hlist_node *node) { // 这个if 本来是不需要的，甚至参数的head 也不需要传， // 更好的处理方式见解决方案2 if (node == head-&amp;gt;first) { head-&amp;gt;first = node-&amp;gt;next; } else { node-&amp;gt;prev-&amp;gt;next = node-&amp;gt;next; } if (node-&amp;gt;next) { node-&amp;gt;next-&amp;gt;prev = node-&amp;gt;prev; } } // insert a node void add_node_before(struct hlist_head *head, struct hlist_node *new struct hlist_node *next) { // 这个if 本来是不需要的，参数head也是不需要传递的 if (next == head-&amp;gt;first) { new-&amp;gt;prev = NULL; head-&amp;gt;first = new; } else { new-&amp;gt;prev = next-&amp;gt;prev; new-&amp;gt;prev-&amp;gt;next = new; } new-&amp;gt;next = next; next-&amp;gt;prev = new; 更好的解决方案: **prev 改变struct hlist_node的构成，使用二级指针:</description></item></channel></rss>