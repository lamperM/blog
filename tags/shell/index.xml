<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shell on Wangloo's BLOG</title><link>https://wangloo.github.io/tags/shell/</link><description>Recent content in shell on Wangloo's BLOG</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>@2019 Notepadium.</copyright><lastBuildDate>Sun, 27 Nov 2022 14:45:58 +0800</lastBuildDate><atom:link href="https://wangloo.github.io/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>常用的 shell 命令</title><link>https://wangloo.github.io/posts/shell/shell-commands/</link><pubDate>Sun, 27 Nov 2022 14:45:58 +0800</pubDate><guid>https://wangloo.github.io/posts/shell/shell-commands/</guid><description>我使用的 shell 是 Bash
mount 相关 mount 输出当前已经挂在的分区
where and which which 查看可执行文件的位置
$ which python3 /usr/bin/python3 whereis 除了可执行文件还能搜索其他类型的文件, 不常用, 详见 man whereis
- 的妙用 一些命令支持使用 - 代替文件名, 输入输出都可以:
代替标准输出; 一些命令会将-o/-O 后面的-判定为输出到STDOUT, 详见下面示例. 代替标准输入; 下面给出两个同时代替输入输出的例子:
# 将标准输入(STDIN)的内容作为gcc的输入, 编译后的结果输出到标准输出(STDOUT) echo &amp;#39;void foo() {}&amp;#39; | gcc -x c -o - - # 将下载的文件输出到标准输出, 同时作为tar命令的输入文件, 进行解压 wget -O - &amp;#34;https://www.dropbox.com/download?plat=lnx.x86_64&amp;#34; | tar xzf - - 如何被解析是取决于命令的实现, 非标准. 比如 cd - 就有特殊的含义</description></item><item><title>武器库: shell scripts</title><link>https://wangloo.github.io/posts/shell/shell-script/</link><pubDate>Wed, 20 Jul 2022 11:54:13 +0800</pubDate><guid>https://wangloo.github.io/posts/shell/shell-script/</guid><description>ℹ️ 以下命令/脚本的执行环境均为 Bash.
统计代码量 使用到的命令包含: find, wc, xargs, sort等
列出所有的文件及其代码行数, 只统计.c和.h, 过滤./scripts目录.
find -name &amp;#39;*.[c|h]&amp;#39; ! -path &amp;#39;./scripts/*&amp;#39; | xargs wc -l +将内容按照代码行数降序排列
find -name &amp;#39;*.[c|h]&amp;#39; ! -path &amp;#39;./scripts/*&amp;#39; | xargs wc -l | sort -rn 若仅列出总的代码行数, 去除空行
(find ./ -name &amp;#39;*.[c|h]&amp;#39; -print0 | xargs -0 cat) | sed &amp;#39;/^\s*$/d&amp;#39; | wc -l  判断执行脚本时带的参数 if [ $# -ne 1 ]; then echo &amp;#34;ONE parameter is needed&amp;#34; exit -1 fi if [ $1 == &amp;#39;build&amp;#39; ]; then # do something elif [ $1 == &amp;#39;run&amp;#39; ]; then # do something elif [ $1 == &amp;#39;gdb&amp;#39; ]; then # do something else echo &amp;#34;Not supported command&amp;#34; fi  自动拷贝文件到SD Card TODO</description></item></channel></rss>