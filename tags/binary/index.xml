<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Binary on BLOG</title><link>https://wangloo.github.io/tags/binary/</link><description>Recent content in Binary on BLOG</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 14 Dec 2023 13:21:27 +0800</lastBuildDate><atom:link href="https://wangloo.github.io/tags/binary/index.xml" rel="self" type="application/rss+xml"/><item><title>Weapon: GNU Binutils</title><link>https://wangloo.github.io/posts/binary/gnu_binutils/</link><pubDate>Thu, 14 Dec 2023 13:21:27 +0800</pubDate><guid>https://wangloo.github.io/posts/binary/gnu_binutils/</guid><description>1# 输出 section header table 2readelf -S xxx.elf 3 4# 输出 program header table 5readelf -l xxx.elf 6 7# 输出 ELF header 8readelf -h xxx.elf 9 10# 输出 elf header，section header table，program header table(常用） 11readelf -e xxx.elf 12 13# 查看符号 14nm xxx.elf 15readelf -s xxx.elf # detailed 16 17# 打印某个section的内容 18readelf -p .strtab xxx.elf</description></item><item><title>Design a Elf Loader</title><link>https://wangloo.github.io/posts/binary/elf_load/</link><pubDate>Fri, 24 Nov 2023 16:21:27 +0800</pubDate><guid>https://wangloo.github.io/posts/binary/elf_load/</guid><description>分析Elf文件 映射 Segments 对栈进行预处理 1int main(int argc, char **argv, char **envp) {...} 见到一个main函数的定义，你是否考虑过:
main函数使用这些参数的作用分别是什么? Elf运行前，他们是如何被正确放置的? 我们又如何正确的访问? 内核中的Elf加载器还需要将辅助向量和其他信息(argc,argv,envp)一起放在栈上。 初始化后，进程的堆栈如下所示(64位架构下):
1position content size (bytes) + comment 2 ------------------------------------------------------------------------ 3 [ free used for process ] 4 stack pointer -&amp;gt; [ argc = number of args ] 8 5 [ argv[0] (pointer) ] 8 (program name) 6 [ argv[1] (pointer) ] 8 7 [ argv[..] (pointer) ] 8 * x 8 [ argv[n - 1] (pointer) ] 8 9 [ argv[n] (pointer) ] 8 (= NULL) 10 11 [ envp[0] (pointer) ] 8 12 [ envp[1] (pointer) ] 8 13 [ envp[.</description></item></channel></rss>