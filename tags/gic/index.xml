<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gic on BLOG</title><link>https://wangloo.github.io/tags/gic/</link><description>Recent content in gic on BLOG</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 02 Aug 2024 23:51:49 +0800</lastBuildDate><atom:link href="https://wangloo.github.io/tags/gic/index.xml" rel="self" type="application/rss+xml"/><item><title>ARMv8 中断管理(4): 中断分组</title><link>https://wangloo.github.io/posts/arch/armv8/gicv3/intr_grp/</link><pubDate>Fri, 02 Aug 2024 23:51:49 +0800</pubDate><guid>https://wangloo.github.io/posts/arch/armv8/gicv3/intr_grp/</guid><description>NS Group 1： 想给 REE 处理的中断 S Group 1：想给 TEE 处理的中断 Group 0：想给 ATF 处理的中断 IRQ 和 FIQ 的含义 FIQ 并不是以前意义上的快速中断，而是 Forward 中断，需要被转发的中断。IRQ 和 FIQ 的优先级是相同的。
中断分组产生的原因？ 怎么就能做到上述的约定？ 根据 3 种当前环境（REE、TEE、ATF）和 3 种中断分组，总共有 9 种可能得情况，依次进行分析。ATF 在这里也就等价于 BL31。
.notice { --root-color: #444; --root-background: #eff; --title-color: #fff; --title-background: #7bd; --warning-title: #c33; --warning-content: #fee; --info-title: #fb7; --info-content: #fec; --note-title: #6be; --note-content: #e7f2fa; --tip-title: #5a5; --tip-content: #efe } @media (prefers-color-scheme:dark) { .</description></item></channel></rss>